require './array.li'

module arrayTest {
    fn main() {
        var arrayEmpty: string = "";
        var arrayNumber: string = '[1, 2, 3, 5, 8, 13, 21, 34, 55, 89]';
        var arrayString: string = '[ "a", "b", "c" ]';
        var arrayMixed: string = '["Shell Script Library", 30, true, 3.14, "ShSL"]';

        testingArrayEmpty(arrayEmpty);
        testingArrayNumber(arrayNumber);
        testingArrayString(arrayString);
        testingArrayMixed(arrayMixed);
    }

    fn testingArrayEmpty(arrayValue: string) {
        var arrayCustom: string = array::create(arrayValue);

        assert(arrayCustom == "[]");
        assert(array::push(arrayCustom, 'ShSL') == '["ShSL"]');
    }

    fn testingArrayNumber(arrayValue: string) {
        var arrayCustom: string = array::create(arrayValue);
        var arraySize: int = array::length(arrayCustom);

        assert(arraySize == 10);

        assert(array::getElementFromIndex(arrayCustom, -1) == 89 as string);
        assert(array::getElementFromIndex(arrayCustom, 0) == 1 as string);
        assert(array::getElementFromIndex(arrayCustom, 1) == 2 as string);
        assert(array::getElementFromIndex(arrayCustom, 2) == 3 as string);
        assert(array::getElementFromIndex(arrayCustom, 3) == 5 as string);
        assert(array::getElementFromIndex(arrayCustom, 4) == 8 as string);
        assert(array::getElementFromIndex(arrayCustom, 5) == 13 as string);
        assert(array::getElementFromIndex(arrayCustom, 6) == 21 as string);
        assert(array::getElementFromIndex(arrayCustom, 7) == 34 as string);
        assert(array::getElementFromIndex(arrayCustom, arraySize - 1) == 89 as string);

        assert(array::update(arrayCustom, 0, false) == '[false,2,3,5,8,13,21,34,55,89]' as string);
        assert(array::update(arrayCustom, 1, 14) == '[1,14,3,5,8,13,21,34,55,89]' as string);
        assert(array::update(arrayCustom, 2, 'testing') == '[1,2,"testing",5,8,13,21,34,55,89]' as string);

        assert(array::insert(arrayCustom, true, 0) == '[true,1,2,3,5,8,13,21,34,55,89]' as string);
        assert(array::insert(arrayCustom, 39, 2) == '[1,2,39,3,5,8,13,21,34,55,89]' as string);
        assert(array::insert(arrayCustom, 'testing', 1) == '[1,"testing",2,3,5,8,13,21,34,55,89]' as string);

        assert(array::push(arrayCustom, true) == '[1,2,3,5,8,13,21,34,55,89,true]' as string);
        assert(array::push(arrayCustom, 95) == '[1,2,3,5,8,13,21,34,55,89,95]' as string);
        assert(array::push(arrayCustom, 'ShSL') == '[1,2,3,5,8,13,21,34,55,89,"ShSL"]' as string);
        
        assert(array::delete(arrayCustom, -1) == '[1,2,3,5,8,13,21,34,55]' as string);
        assert(array::delete(arrayCustom, 1) == '[1,3,5,8,13,21,34,55,89]' as string);
        assert(array::delete(arrayCustom, 2) == '[1,2,5,8,13,21,34,55,89]' as string);
        
        assert(array::pop(arrayCustom) == '[1,2,3,5,8,13,21,34,55]' as string);
        
        assert(array::getIndexFromElement(arrayCustom, 8) == 4 as string);
        assert(array::getIndexFromElement(arrayCustom, 18) == 'null' as string);
        assert(array::getIndexFromElement(arrayCustom, 34) == 7 as string);
        
        assert(array::sort(arrayCustom) == '[1,2,3,5,8,13,21,34,55,89]' as string);
        assert(array::sortReverse(arrayCustom) == '[89,55,34,21,13,8,5,3,2,1]' as string);
    }

    fn testingArrayString(arrayValue: string) {
        var arrayCustom: string = array::create(arrayValue);
        var arraySize: int = array::length(arrayCustom);

        assert(arraySize == 3);

        assert(array::getElementFromIndex(arrayCustom, -1) == 'c' as string);
        assert(array::getElementFromIndex(arrayCustom, 0) == 'a' as string);
        assert(array::getElementFromIndex(arrayCustom, 1) == 'b' as string);
        assert(array::getElementFromIndex(arrayCustom, 2) == 'c' as string);
        assert(array::getElementFromIndex(arrayCustom, 3) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, 4) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, 5) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, 6) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, 7) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, arraySize - 1) == 'c' as string);

        assert(array::update(arrayCustom, 0, false) == '[false,"b","c"]' as string);
        assert(array::update(arrayCustom, 1, 14) == '["a",14,"c"]' as string);
        assert(array::update(arrayCustom, 2, 'testing') == '["a","b","testing"]' as string);

        assert(array::insert(arrayCustom, true, 0) == '[true,"a","b","c"]' as string);
        assert(array::insert(arrayCustom, 39, 2) == '["a","b",39,"c"]' as string);
        assert(array::insert(arrayCustom, 'testing', 1) == '["a","testing","b","c"]' as string);

        assert(array::push(arrayCustom, true) == '["a","b","c",true]' as string);
        assert(array::push(arrayCustom, 95) == '["a","b","c",95]' as string);
        assert(array::push(arrayCustom, 'ShSL') == '["a","b","c","ShSL"]' as string);
        
        assert(array::delete(arrayCustom, -1) == '["a","b"]' as string);
        assert(array::delete(arrayCustom, 1) == '["a","c"]' as string);
        assert(array::delete(arrayCustom, 2) == '["a","b"]' as string);
        
        assert(array::pop(arrayCustom) == '["a","b"]' as string);
        
        assert(array::getIndexFromElement(arrayCustom, 8) == 'null' as string);
        assert(array::getIndexFromElement(arrayCustom, 18) == 'null' as string);
        assert(array::getIndexFromElement(arrayCustom, 34) == 'null' as string);
        
        assert(array::sort(arrayCustom) == '["a","b","c"]' as string);
        assert(array::sortReverse(arrayCustom) == '["c","b","a"]' as string);
    }

    fn testingArrayMixed(arrayValue: string) {
        var arrayCustom: string = array::create(arrayValue);
        var arraySize: int = array::length(arrayCustom);

        assert(arraySize == 5);

        assert(array::getElementFromIndex(arrayCustom, -1) == 'ShSL' as string);
        assert(array::getElementFromIndex(arrayCustom, 0) == 'Shell Script Library' as string);
        assert(array::getElementFromIndex(arrayCustom, 1) == 30 as string);
        assert(array::getElementFromIndex(arrayCustom, 2) == true as string);
        assert(array::getElementFromIndex(arrayCustom, 3) == 3.14 as string);        
        assert(array::getElementFromIndex(arrayCustom, 4) == 'ShSL' as string);
        assert(array::getElementFromIndex(arrayCustom, 5) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, 6) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, 7) == 'null' as string);
        assert(array::getElementFromIndex(arrayCustom, arraySize - 1) == 'ShSL' as string);

        assert(array::update(arrayCustom, 0, false) == '[false,30,true,3.14,"ShSL"]' as string);
        assert(array::update(arrayCustom, 1, 14) == '["Shell Script Library",14,true,3.14,"ShSL"]' as string);
        assert(array::update(arrayCustom, 2, 'testing') == '["Shell Script Library",30,"testing",3.14,"ShSL"]' as string);

        assert(array::insert(arrayCustom, true, 0) == '[true,"Shell Script Library",30,true,3.14,"ShSL"]' as string);
        assert(array::insert(arrayCustom, 39, 2) == '["Shell Script Library",30,39,true,3.14,"ShSL"]' as string);
        assert(array::insert(arrayCustom, 'testing', 1) == '["Shell Script Library","testing",30,true,3.14,"ShSL"]' as string);

        assert(array::push(arrayCustom, true) == '["Shell Script Library",30,true,3.14,"ShSL",true]' as string);
        assert(array::push(arrayCustom, 95) == '["Shell Script Library",30,true,3.14,"ShSL",95]' as string);
        assert(array::push(arrayCustom, 'ShSL') == '["Shell Script Library",30,true,3.14,"ShSL","ShSL"]' as string);
        
        assert(array::delete(arrayCustom, -1) == '["Shell Script Library",30,true,3.14]' as string);
        assert(array::delete(arrayCustom, 1) == '["Shell Script Library",true,3.14,"ShSL"]' as string);
        assert(array::delete(arrayCustom, 2) == '["Shell Script Library",30,3.14,"ShSL"]' as string);
        
        assert(array::pop(arrayCustom) == '["Shell Script Library",30,true,3.14]' as string);
        
        assert(array::getIndexFromElement(arrayCustom, 8) == 'null' as string);
        assert(array::getIndexFromElement(arrayCustom, 18) == 'null' as string);
        assert(array::getIndexFromElement(arrayCustom, 34) == 'null' as string);
        
        assert(array::sort(arrayCustom) == '[true,3.14,30,"ShSL","Shell Script Library"]' as string);
        assert(array::sortReverse(arrayCustom) == '["Shell Script Library","ShSL",30,3.14,true]' as string);
    }
}

arrayTest::main();